#!/usr/bin/env node

let Spinnies = require('spinnies')
let chalk = require('chalk')

let generateWebManifest = require('./steps/generate-web-manifest')
let downloadProject = require('./steps/download-project')
let findFilesInCSS = require('./steps/find-files-in-css')
let compressAssets = require('./steps/compress-assets')
let copyWellKnown = require('./steps/copy-well-known')
let compileAssets = require('./steps/compile-assets')
let repackScripts = require('./steps/repack-scripts')
let createLayout = require('./steps/create-layout')
let buildGuides = require('./steps/build-guides')
let readGuides = require('./steps/read-guides')
let updateHtml = require('./steps/update-html')
let readJsdoc = require('./steps/read-jsdoc')
let buildApi = require('./steps/build-api')

async function build () {
  let spin = new Spinnies({ succeedColor: 'white' })
  let assets = await compileAssets()
  let [webmanifest, filesFromCSS] = await Promise.all([
    generateWebManifest(assets),
    findFilesInCSS(assets),
    copyWellKnown(assets),
    repackScripts(assets),
    downloadProject(spin, 'logux'),
    downloadProject(spin, 'logux-core'),
    downloadProject(spin, 'logux-server')
  ])
  let [guides, nodeJsdoc, uikit] = await Promise.all([
    readGuides(spin),
    readJsdoc(spin, 'logux-core', 'logux-server'),
    updateHtml(assets, webmanifest, filesFromCSS)
  ])
  let layout = await createLayout(uikit)
  await Promise.all([
    buildGuides(spin, assets, layout, guides),
    buildApi(spin, assets, layout, 'node-api', 'Node API', nodeJsdoc)
  ])
  await compressAssets(assets)
}

build().catch(e => {
  process.stderr.write(chalk.red(e.stack) + '\n')
  process.exit(1)
})
